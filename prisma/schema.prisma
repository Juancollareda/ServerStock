generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite" // o "postgresql" o "mysql"
  url      = env("DATABASE_URL")
}

model Proveedor {
  id_proveedor   Int       @id @default(autoincrement())
  nombre         String
  email          String
  contrasenia    String
  telefono       String?
  direccion      String?
  nombre_empresa String?
  dni            String?
  foto           String
  articulos      Product[]
}

model Product {
  id_producto     Int        @id @default(autoincrement())
  nombre_producto String
  codigo_barras   String
  descripcion     String
  cantidad_stock  Int
  tags            String
  id_proveedor    Int
  proveedor       Proveedor  @relation(fields: [id_proveedor], references: [id_proveedor], onDelete: Cascade)
  precio          Float
  foto            String
  preciocompra    Int?
  detallesPedido  OrderDetail[]
}

model Client {
  id_cliente  Int      @id @default(autoincrement())
  usuario     String
  contrasena  String
  email       String   @unique
  nombre      String
  dni         String?
  foto        String?
  pedidos     Pedido[]
}

model Pedido {
  id_pedido     Int          @id @default(autoincrement())
  id_cliente    Int
  fecha_pedido  DateTime
  estado_pedido String
  cliente       Client       @relation(fields: [id_cliente], references: [id_cliente], onDelete: Cascade)
  detalles      OrderDetail[]
}

model OrderDetail {
  id_detalle_pedido Int      @id @default(autoincrement())
  id_pedido         Int
  id_producto       Int
  cantidad          Int
  precio_unitario   Float
  direccion         String?
  pedido            Pedido   @relation(fields: [id_pedido], references: [id_pedido], onDelete: Cascade)
  producto          Product  @relation(fields: [id_producto], references: [id_producto], onDelete: Cascade)
  estado_proveedor  String   @default("pendiente")
}
